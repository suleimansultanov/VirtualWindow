<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Status" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="Actual Payment Amount" xml:space="preserve">
    <value>Сумма к оплате</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Добавить товар</value>
  </data>
  <data name="Modified" xml:space="preserve">
    <value>Изменено</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Сумма</value>
  </data>
  <data name="Artical" xml:space="preserve">
    <value>Наименование</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Вернутся</value>
  </data>
  <data name="Bonuses" xml:space="preserve">
    <value>Количество бонусов</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Чек</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Завершена</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить товар</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Удалено</value>
  </data>
  <data name="Discount in bounuses" xml:space="preserve">
    <value>Скидка в бонусах</value>
  </data>
  <data name="Empty table" xml:space="preserve">
    <value>В таблице отсутствуют данные</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="Is Inside" xml:space="preserve">
    <value>Внутри витрины?</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Метка</value>
  </data>
  <data name="Hard to Detect" xml:space="preserve">
    <value>Плохочитаемая</value>
  </data>
  <data name="List of transactions" xml:space="preserve">
    <value>Список банковских операций</value>
  </data>
  <data name="No records" xml:space="preserve">
    <value>Записей нет</value>
  </data>
  <data name="Unverified" xml:space="preserve">
    <value>Требуется подтверждение</value>
  </data>
  <data name="Unpaid" xml:space="preserve">
    <value>Не оплачена</value>
  </data>
  <data name="Opened" xml:space="preserve">
    <value>Открыта</value>
  </data>
  <data name="Operation Status" xml:space="preserve">
    <value>Статус операции</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Оплачено</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Действия</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Оплата</value>
  </data>
  <data name="pc." xml:space="preserve">
    <value>шт.</value>
  </data>
  <data name="PendingCompletion" xml:space="preserve">
    <value>Ожидает завершения</value>
  </data>
  <data name="PendingPayment" xml:space="preserve">
    <value>Ожидает оплаты</value>
  </data>
  <data name="Point of Sale" xml:space="preserve">
    <value>Витрина</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Цена</value>
  </data>
  <data name="Refund" xml:space="preserve">
    <value>Возврат</value>
  </data>
  <data name="Refunded" xml:space="preserve">
    <value>Возвращено</value>
  </data>
  <data name="Total cost" xml:space="preserve">
    <value>Общая стоимость</value>
  </data>
  <data name="Total refund bonus" xml:space="preserve">
    <value>Всего к возврату на бонусный счет</value>
  </data>
  <data name="Total refund money" xml:space="preserve">
    <value>Всего к возврату на карту</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>Да</value>
  </data>
  <data name="User Information" xml:space="preserve">
    <value>О пользователе</value>
  </data>
  <data name="Edit details check" xml:space="preserve">
    <value>Редактирование чека</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Домой</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Телефон</value>
  </data>
  <data name="Panel settings" xml:space="preserve">
    <value>Панель управления</value>
  </data>
  <data name="Confirm good" xml:space="preserve">
    <value>Подтвердить товар</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="Refund good" xml:space="preserve">
    <value>Возвратить средства</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="Transaction" xml:space="preserve">
    <value>Номер транзакции</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Тип операции</value>
  </data>
  <data name="Additional info" xml:space="preserve">
    <value>Дополнительная информация</value>
  </data>
  <data name="Label found date" xml:space="preserve">
    <value>Дата появления метки</value>
  </data>
  <data name="Label loss date" xml:space="preserve">
    <value>Дата исчезновения метки</value>
  </data>
  <data name="Label was found" xml:space="preserve">
    <value>Метка была найдена</value>
  </data>
  <data name="Label was lost" xml:space="preserve">
    <value>Метка была потеряна</value>
  </data>
  <data name="days" xml:space="preserve">
    <value>дней</value>
  </data>
  <data name="hours" xml:space="preserve">
    <value>часов</value>
  </data>
  <data name="minutes" xml:space="preserve">
    <value>минут</value>
  </data>
  <data name="seconds" xml:space="preserve">
    <value>секунд</value>
  </data>
  <data name="before the purchase" xml:space="preserve">
    <value>до покупки</value>
  </data>
  <data name="after the purchase" xml:space="preserve">
    <value>после покупки</value>
  </data>
  <data name="Will be deleted" xml:space="preserve">
    <value>К удалению</value>
  </data>
  <data name="Will be paid" xml:space="preserve">
    <value>К оплате</value>
  </data>
  <data name="Will be refunded" xml:space="preserve">
    <value>К возврату</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Подтвердить</value>
  </data>
  <data name="PaidUnverified" xml:space="preserve">
    <value>Требует подтверждение оплаты</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Скидка</value>
  </data>
  <data name="Price with discount" xml:space="preserve">
    <value>Цена с учетом скидки</value>
  </data>
  <data name="User name" xml:space="preserve">
    <value>Имя пользователя</value>
  </data>
  <data name="GoodsMoving" xml:space="preserve">
    <value>Движение ТМЦ</value>
  </data>
</root>