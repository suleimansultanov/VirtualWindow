@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Mvc.Localization
@using NasladdinPlace.Core.Enums

<script type="text/html" id="bankTransactions-template">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>@Localizer["BankTransactionsHistory"].Value</h5>
        </div>
        <div class="ibox-content">
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover" id="transaction-history-table" style="margin-bottom: 0px;">
                    <thead>
                    <tr>
                        <th class="text-center">@Localizer["TransactionNumber"].Value</th>
                        <th class="text-center">@Localizer["Type"].Value</th>
                        <th class="text-center">@Localizer["Date"].Value</th>
                        <th class="text-center">@Localizer["Description"].Value</th>
                        <th class="text-center">@Localizer["Amount"].Value</th>
                    </tr>
                    </thead>
                    <tbody>
                    <!-- ko if : $data.length == 0 -->
                    <tr class="text-center">
                        <td colspan="5">@Localizer["No records"].Value</td>
                    </tr>
                    <!-- /ko -->
                    <!-- ko foreach: $data -->
                    <tr>
                        <td><span data-bind="text: bankTransactionId"></span></td>
                        <td><span data-bind="text: GetBankTransactionInfoTypeName(type)"></span></td>
                        <td><span data-bind="date: dateCreated, dateFormat: 'DD.MM.YYYY HH:mm:ss'"></span></td>
                        <td><span data-bind="text: comment"></span></td>
                        <td class="text-right">
                            <span>
                                <!-- ko if : ko.utils.unwrapObservable(type) == @((int) BankTransactionInfoType.Payment) -->
                                <span class="bg-green">+<span data-bind="text: amount"></span></span>
                                <!-- /ko -->
                                <!-- ko if : ko.utils.unwrapObservable(type) == @((int) BankTransactionInfoType.Refund) -->
                                <span class="bg-red">-<span data-bind="text: amount"></span></span>
                                <!-- /ko -->
                                <!-- ko if : ko.utils.unwrapObservable(type) == @((int) BankTransactionInfoType.Error) -->
                                <span data-bind="text: amount"></span>
                                <!-- /ko -->
                            </span>
                        </td>
                        </tr>
                        <!-- /ko -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</script>


<script type="text/javascript">
    function GetBankTransactionInfoTypeName(type) {
        type = ko.utils.unwrapObservable(type);
        if (type === @((int) BankTransactionInfoType.Payment))
            return '@Html.Raw(@Localizer[nameof(BankTransactionInfoType.Payment)].Value)';
        if (type === @((int) BankTransactionInfoType.Refund))
            return '@Html.Raw(@Localizer[nameof(BankTransactionInfoType.Refund)].Value)';
        if (type === @((int) BankTransactionInfoType.Error))
            return '@Html.Raw(@Localizer[nameof(BankTransactionInfoType.Error)].Value)';

        return '';
    }
</script>
