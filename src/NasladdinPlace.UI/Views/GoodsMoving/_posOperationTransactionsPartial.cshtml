@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Mvc.Localization
@using NasladdinPlace.Core.Enums
@using NasladdinPlace.UI.Helpers
@using NasladdinPlace.UI.ViewModels.PosOperationTransaction
@using NasladdinPlace.Utilities.EnumHelpers
@model ICollection<PosOperationTransactionViewModel>

@{
    var formRenderer = new FormRendererHelper<PosOperationTransactionViewModel>();

    var cancel = Localizer["Cancel"].Value;

    var createdDateTimeDisplayName = formRenderer.Get(f => f.CreatedDate).DisplayName;
    var transationStateDisplayName = formRenderer.Get(f => f.Status).DisplayName;
    var transactionTypeDisplayName = formRenderer.Get(f => f.Type).DisplayName;
    var bonusAmountDisplayName = formRenderer.Get(f => f.BonusAmount).DisplayName;
    var moneyAmountDisplayName = formRenderer.Get(f => f.MoneyAmount).DisplayName;
    var fiscalizationAmountDisplayName = formRenderer.Get(f => f.FiscalizationAmount).DisplayName;
    var fiscalizationPaidDateDisplayName = formRenderer.Get(f => f.FiscalizationPaidDate).DisplayName;
    var bankTransactionPaidDateDisplayName = formRenderer.Get(f => f.BankTransactionPaidDate).DisplayName;
    var totalCostWithoutDiscountsAndBonusesDisplayName = formRenderer.Get(f => f.TotalCost).DisplayName;
    var totalDiscountAmountDisplayName = formRenderer.Get(f => f.TotalDiscountAmount).DisplayName;
}

<div class="ibox float-e-margins">
    <div class="ibox-title">
        <h5>@Localizer["PosOperationTransactionsInfo"].Value</h5>
    </div>
    <div class="ibox-content">
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover" id="operation-transactions-history-table" style="margin-bottom: 0px;" role="grid">
                <caption>&nbsp;</caption>
                <thead role="rowgroup">
                    <tr role="row">
                        <th role="columnheader" id="createdDateTimeDisplayName" class="text-left">@createdDateTimeDisplayName</th>
                        <th role="columnheader" id="transactionTypeDisplayName" class="text-left">@transactionTypeDisplayName</th>
                        <th role="columnheader" id="transationStateDisplayName" class="text-left">@transationStateDisplayName</th>
                        <th role="columnheader" id="bonusAmountDisplayName" class="text-left">@bonusAmountDisplayName</th>
                        <th role="columnheader" id="moneyAmountDisplayName" class="text-left">@moneyAmountDisplayName</th>
                        <th role="columnheader" id="bankTransactionPaidDateDisplayName" class="text-left">@bankTransactionPaidDateDisplayName</th>
                        <th role="columnheader" id="fiscalizationAmountDisplayName" class="text-left">@fiscalizationAmountDisplayName</th>
                        <th role="columnheader" id="fiscalizationPaidDateDisplayName" class="text-left">@fiscalizationPaidDateDisplayName</th>
                        <th role="columnheader" id="totalCostWithoutDiscountsAndBonusesDisplayName" class="text-left">@totalCostWithoutDiscountsAndBonusesDisplayName</th>
                        <th role="columnheader" id="totalDiscountAmountDisplayName" class="text-left">@totalDiscountAmountDisplayName</th>
                    </tr>
                </thead>
                <tbody role="rowgroup">
                    @if (Model.Any())
                    {
                        <!-- ko foreach: PosOperationTransactions -->
                        <tr role="row" class="table-row-link table-hover" data-bind="click: $root.posOperationTransactionDetails">
                            <td role="gridcell"><span data-bind="date:createdDate, dateFormat: 'DD.MM.YYYY HH:mm:ss'"></span></td>
                            <td role="gridcell"><span data-bind="text: $root.GetPotTypeName(type)"></span></td>
                            <td role="gridcell"><span data-bind="text: $root.GetPotStateName(status)"></span></td>
                            <td role="gridcell"><span data-bind="text: bonusAmount"></span></td>
                            <td role="gridcell"><span data-bind="text: moneyAmount"></span></td>
                            <td role="gridcell"><span data-bind="date: bankTransactionPaidDate, dateFormat: 'DD.MM.YYYY HH:mm:ss'"></span></td>
                            <td role="gridcell"><span data-bind="text: fiscalizationAmount"></span></td>
                            <td role="gridcell"><span data-bind="date: fiscalizationPaidDate, dateFormat: 'DD.MM.YYYY HH:mm:ss'"></span></td>
                            <td role="gridcell"><span data-bind="text: totalCost"></span></td>
                            <td role="gridcell"><span data-bind="text: totalDiscountAmount"></span></td>
                        </tr>
                        <!-- /ko -->
                    }
                    else
                    {
                        <tr role="row" class="text-center">
                            <td role="gridcell" colspan="10">@Localizer["No records"].Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    window.getPosOerationTransactionHandler = function() {
        return new PosOerationTransactionHandler(
            vm => {
                const modalId = "#pos-operation-transaction-modal";

                vm.PosOperationTransactionDetails = ko.observable();

                vm.GetPosOperationTransactionViewTitle = function (type, status) {
                    return vm.GetPotTypeName(type) + ' ' + vm.GetPotStateName(status).toLowerCase();
                }

                vm.GetPotTypeName = function (type) {
                    if (type === @((int) PosOperationTransactionType.RegularPurchase))
                        return '@Html.Raw(@Localizer[nameof(PosOperationTransactionType.RegularPurchase)].Value)';
                    if (type === @((int)PosOperationTransactionType.Refund))
                        return '@Html.Raw(@Localizer[nameof(PosOperationTransactionType.Refund)].Value)';
                    if (type === @((int)PosOperationTransactionType.Addition))
                        return '@Html.Raw(@Localizer[nameof(PosOperationTransactionType.Addition)].Value)';
                    if (type === @((int)PosOperationTransactionType.Verification))
                        return '@Html.Raw(@Localizer[nameof(PosOperationTransactionType.Verification)].Value)';

                    return '';
                }

                vm.GetPotStateName = function (status) {
                    if (status === @((int) PosOperationTransactionStatus.InProcess))
                        return '@Html.Raw(PosOperationTransactionStatus.InProcess.GetDisplayName())';
                    if (status === @((int)PosOperationTransactionStatus.PaidFiscalized))
                        return '@Html.Raw(PosOperationTransactionStatus.PaidFiscalized.GetDisplayName())';
                    if (status === @((int)PosOperationTransactionStatus.Unpaid))
                        return '@Html.Raw(PosOperationTransactionStatus.Unpaid.GetDisplayName())';
                    if (status === @((int)PosOperationTransactionStatus.PaidUnfiscalized))
                        return '@Html.Raw(PosOperationTransactionStatus.PaidUnfiscalized.GetDisplayName())';
                    if (status === @((int)PosOperationTransactionStatus.PaidByBonusPoints))
                        return '@Html.Raw(PosOperationTransactionStatus.PaidByBonusPoints.GetDisplayName())';

                    return '';
                }

                vm.posOperationTransactionDetails = function() {
                    window.location.href = '@Url.Action("TransactionDetails")/' + this.posOperationTransactionId;
                }
            });
    };
</script>