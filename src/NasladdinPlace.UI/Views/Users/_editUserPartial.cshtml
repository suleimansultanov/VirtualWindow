@using Microsoft.AspNetCore.Mvc.Localization
@using NasladdinPlace.DAL.Constants
@using NasladdinPlace.UI.Helpers
@using NasladdinPlace.UI.ViewModels.Base
@using NasladdinPlace.UI.ViewModels.Users
@model UniReferenceViewModel<BaseViewModel>

@inject IViewLocalizer Localizer

@{
    var changePasswordButton = Localizer["Change password"].Value;
    var saveButton = Localizer["Save"].Value;
    var cancel = Localizer["Cancel"].Value;
    var formRenderer = new FormRendererHelper<UserViewModel>();
}
<div class="modal" id="edit-user-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated fadeIn">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4>@Localizer["Editing user information"].Value</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-4 col-sm-offset-4 text-center">
                    <!-- ko if: pageGender -->
                    <img alt="profile" class="img-responsive circle-border" style="border-color: #e5e6e7; border-width: 2px;" src="~/images/Male.svg" />
                    <!-- /ko -->
                    <!-- ko ifnot: pageGender -->
                    <img alt="profile" class="img-responsive circle-border" style="border-color: #e5e6e7; border-width: 2px;" src="~/images/Female.svg" />
                    <!-- /ko -->
                </div>
                <div class="form-group row">
                    <label class="col-lg-12">@Html.RenderDisplay(formRenderer.Get(f => f.UserName))</label>
                    <div class="col-lg-12">@await Html.RenderControlAsync(formRenderer.Get(f => f.UserName))</div>
                </div>
                <div class="form-group row">
                    <label class="col-lg-12">@Html.RenderDisplay(formRenderer.Get(f => f.Email))</label>
                    <div class="col-lg-12">@await Html.RenderControlAsync(formRenderer.Get(f => f.Email))</div>
                </div>
                <div class="form-group row">
                    <label class="col-lg-12">@Html.RenderDisplay(formRenderer.Get(f => f.PhoneNumber))</label>
                    <div class="col-lg-12">@await Html.RenderControlAsync(formRenderer.Get(f => f.PhoneNumber))</div>
                </div>
                <div class="form-group row">
                    <label class="col-lg-12">@Html.RenderDisplay(formRenderer.Get(f => f.Gender))</label>
                    <div class="col-lg-12">@await Html.RenderControlAsync(formRenderer.Get(f => f.Gender))</div>
                </div>
                <div class="form-group row">
                    <label class="col-lg-12">@Html.RenderDisplay(formRenderer.Get(f => f.Birthdate))</label>
                    <div class="col-lg-12">@await Html.RenderControlAsync(formRenderer.Get(f => f.Birthdate))</div>
                </div>
                @if (User.IsInRole(nameof(Roles.Admin)))
                {
                    <div class="form-group row">
                        <label class="col-lg-12">@Localizer["Role"].Value</label>
                        <div class="col-lg-12">
                            <select name="SelectedRoles" id="edit-selected-roles" class="form-control" data-bind="
                                    options: Roles,
                                    optionsText : 'text',
                                    optionsValue : 'value',
                                    value: SelectedRoles"></select>
                        </div>
                    </div>
                    <div class="form-group col-lg-12 row">
                        <label>@Localizer["Able to access"].Value</label>
                        <div class="pull-right">
                            <input type="checkbox" name="IsActive" data-bind="checked: IsActive" value="IsActive" />
                            <span>@Localizer["Allow"].Value</span>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                @if (User.IsInRole(nameof(Roles.Admin)))
                {
                    <button type="button" class="btn btn-white" data-bind="click: changePassword">@changePasswordButton</button>
                }
                <button type="button" class="btn btn-white" data-dismiss="modal">@cancel</button>
                <button type="button" class="btn btn-primary" data-bind="click: saveUserInfo">@saveButton</button>
            </div>
        </div>
    </div>
</div>